#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#    Dec 22, 2019 06:08:36 PM IST  platform: Windows NT
import dataset_capture
#import threading
#import sys
#import tkinter as tk
#import tkinter.ttk as ttk
import os
#import gui2_support
#import random
#import sys
#import threading
import time
import train
from tkinter import filedialog, messagebox
#import Player
#from MyExceptions import *
import sys
import recognizer

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import gui2_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root,top
    root = tk.Tk()
    gui2_support.set_Tk_var()
    top = Toplevel (root)
    gui2_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    gui2_support.set_Tk_var()
    top = Toplevel1 (w)
    gui2_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])
        top.geometry("849x641+451+111")
        top.title("New Toplevel")
        top.configure(borderwidth="3")
        top.configure(background="#b5335e")
        top.configure(highlightcolor="#151d63")
        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.012, rely=0.062, height=213, width=236)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d8a85f")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self._img1 = tk.PhotoImage(file="C:\\Users\\acer\\Downloads\\605c147697abbd3da666a291576fb1a7.png")
        self.Button1.configure(image=self._img1)
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Button''')
        self.Button1.configure(width=236)
        self.Button1.configure(command=self.dataset)

        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.365, rely=0.062, height=213, width=236)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self._img2 = tk.PhotoImage(file="C:\\Users\\acer\\Downloads\\7b8efcb9cf762564250713027a21d11a.png")
        self.Button2.configure(image=self._img2)
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Button''')
        self.Button2.configure(width=236)
        self.Button2.configure(command=self.train)

        self.Button3 = tk.Button(top)
        self.Button3.place(relx=0.707, rely=0.062, height=213, width=236)
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self._img3 = tk.PhotoImage(file="C:\\Users\\acer\\Downloads\\ed00a6b79a1754e2d27c294101303cb8.png")
        self.Button3.configure(image=self._img3)
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''Button''')
        self.Button3.configure(width=236)
        self.Button3.configure(command=self.recognizer)

        self.Button4 = tk.Button(top)
        self.Button4.place(relx=0.024, rely=0.484, height=213, width=236)
        self.Button4.configure(activebackground="#ececec")
        self.Button4.configure(activeforeground="#000000")
        self.Button4.configure(background="#d9d9d9")
        self.Button4.configure(disabledforeground="#a3a3a3")
        self.Button4.configure(foreground="#000000")
        self.Button4.configure(highlightbackground="#d9d9d9")
        self.Button4.configure(highlightcolor="black")
        self._img4 = tk.PhotoImage(file="C:\\Users\\acer\\Downloads\\f1e329d403bcf8c2e38c771283a5a947.png")
        self.Button4.configure(image=self._img4)
        self.Button4.configure(pady="0")
        self.Button4.configure(text='''Button''')
        self.Button4.configure(width=236)
        self.Button4.configure(command=self.attendence_sheet)

        self.Button5 = tk.Button(top)
        self.Button5.place(relx=0.365, rely=0.484, height=213, width=236)
        self.Button5.configure(activebackground="#ececec")
        self.Button5.configure(activeforeground="#000000")
        self.Button5.configure(background="#d9d9d9")
        self.Button5.configure(disabledforeground="#a3a3a3")
        self.Button5.configure(foreground="#000000")
        self.Button5.configure(highlightbackground="#d9d9d9")
        self.Button5.configure(highlightcolor="#000000")
        self._img5 = tk.PhotoImage(file="C:\\Users\\acer\\Downloads\\a5a736f03a432fad2af0148becd446a9.png")
        self.Button5.configure(image=self._img5)
        self.Button5.configure(pady="0")
        self.Button5.configure(text='''Button''')
        self.Button5.configure(width=236)
        self.Button5.config(command=self.developers)

        self.Button6 = tk.Button(top)
        self.Button6.place(relx=0.707, rely=0.484, height=213, width=236)
        self.Button6.configure(activebackground="#ececec")
        self.Button6.configure(activeforeground="#000000")
        self.Button6.configure(background="#d9d9d9")
        self.Button6.configure(disabledforeground="#a3a3a3")
        self.Button6.configure(foreground="#000000")
        self.Button6.configure(highlightbackground="#d9d9d9")
        self.Button6.configure(highlightcolor="black")
        self._img6 = tk.PhotoImage(file="F:\\minor project\\b0aa32fe288fa2ab04f2e5f9ac99ccac.png")
        self.Button6.configure(image=self._img6)
        self.Button6.configure(pady="0")
        self.Button6.configure(text='''Button''')
        self.Button6.configure(width=236)
        self.Button6.configure(command=self.exit)

        self.TProgressbar1 = ttk.Progressbar(top)
        self.TProgressbar1.place(relx=0.059, rely=0.905, relwidth=0.872
                , relheight=0.0, height=30)
        self.TProgressbar1.configure(length="749")

        self.lbl1 = tk.Label(top)
        self.lbl1.place(relx=0.059, rely=0.016, height=26, width=162)
        self.lbl1.configure(activeforeground="#6b6b6b")
        self.lbl1.configure(background="#c2d8d8")
        self.lbl1.configure(borderwidth="3")
        self.lbl1.configure(disabledforeground="#a3a3a3")
        self.lbl1.configure(foreground="#000000")
        self.lbl1.configure(text='''Create Dataset''')
        self.lbl1.configure(width=162)

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.412, rely=0.016, height=26, width=162)
        self.Label3.configure(background="#c2d8d8")
        self.Label3.configure(compound="center")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''Train Dataset''')
        self.Label3.configure(width=162)

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.742, rely=0.016, height=26, width=162)
        self.Label4.configure(background="#c2d8d8")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''Recognize+attendence''')

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.059, rely=0.437, height=26, width=162)
        self.Label5.configure(background="#c2d8d8")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''Attendence sheet''')

        self.Label6 = tk.Label(top)
        self.Label6.place(relx=0.412, rely=0.437, height=26, width=162)
        self.Label6.configure(background="#c2d8d8")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(text='''Developers''')

        self.Label7 = tk.Label(top)
        self.Label7.place(relx=0.754, rely=0.437, height=26, width=162)
        self.Label7.configure(background="#c2d8d8")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(text='''Exit''')

        self.Label8 = tk.Label(top)
        self.Label8.place(relx=0.436, rely=0.858, height=26, width=112)
        self.Label8.configure(background="#c2d8d8")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(text='''Label''')
        self.Label8.configure(textvariable=gui2_support.lbl)
        self.Label8.configure(width=112)

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        #top.configure(menu = self.menubar)
    def dataset(self):
        self.progress_bar()

        self.TProgressbar1['value'] = 0
        root.update_idletasks()
        #self.newWindow = tk.Toplevel(top)
        #self.app = Demo2(self.newWindow)
        dataset_capture.fun(root)
        #os.system("C:\\Users\\acer\\AppData\\Local\\Temp\\cnn.py\\dataset_capture.py")

    def train(self):
        self.progress_bar()


        #os.system("C:\\Users\\acer\\AppData\\Local\\Temp\\cnn.py\\train.py")
        obj=train.Train()
        messagebox.showinfo("Successfully trained","Successfully trained",parent=root)
        self.TProgressbar1['value'] = 0
        root.update_idletasks()

    def recognizer(self):
        self.progress_bar()

        self.TProgressbar1['value'] = 0
        root.update_idletasks()
        #os.system("C:\\Users\\acer\\AppData\\Local\\Temp\\cnn.py\\recognizer.py")
        obj=recognizer.Recognizer()
        self.TProgressbar1['value'] = 0
    def attendence_sheet(self):
        self.progress_bar()

        self.TProgressbar1['value']=0
        root.update_idletasks()
        os.startfile('C://Users//acer//Untitled Folder//xlwt example.xls')


    def developers(self):
        self.progress_bar()

        self.TProgressbar1['value'] = 0
        root.update_idletasks()
        os.startfile("F://Bootstrap//index.html");

    def exit(self):
        ans=messagebox.askyesno("Quitting","Are you sure you want to Quit !",parent=root)
        if(ans):
            self.progress_bar()
            root.destroy()
    def progress_bar(self):
        import time
        self.TProgressbar1['value'] = 20
        root.update_idletasks()
        time.sleep(1)
        self.TProgressbar1['value'] = 40
        root.update_idletasks()
        time.sleep(1)
        self.TProgressbar1['value'] = 60
        root.update_idletasks()
        time.sleep(1)
        self.TProgressbar1['value'] = 80
        root.update_idletasks()
        time.sleep(1)
        self.TProgressbar1['value'] = 90
        root.update_idletasks()
        time.sleep(1)
        self.TProgressbar1['value'] = 94
        root.update_idletasks()
        time.sleep(1)
        self.TProgressbar1['value'] = 99
        root.update_idletasks()
        time.sleep(1)
        self.TProgressbar1['value'] = 100
        root.update_idletasks()


class Demo2:
    def __init__(self, master):
        self.master = master
        self.frame = tk.Frame(self.master)
        self.quitButton = tk.Button(self.frame, text = 'Quit', width = 25, command = self.close_windows)
        self.quitButton.pack()
        self.frame.pack()

    def close_windows(self):
        self.master.destroy()

if __name__ == '__main__':
    vp_start_gui()



